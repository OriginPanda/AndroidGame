// Generated by view binder compiler. Do not edit!
package com.example.projectwjp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projectwjp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGameBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout FragmentGame;

  @NonNull
  public final ProgressBar enemyHPBar;

  @NonNull
  public final ProgressBar heroHPBar;

  @NonNull
  public final TextView levelEquation;

  @NonNull
  public final TextView levelType;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  private FragmentGameBinding(@NonNull FrameLayout rootView, @NonNull FrameLayout FragmentGame,
      @NonNull ProgressBar enemyHPBar, @NonNull ProgressBar heroHPBar,
      @NonNull TextView levelEquation, @NonNull TextView levelType, @NonNull TextView textView,
      @NonNull TextView textView2) {
    this.rootView = rootView;
    this.FragmentGame = FragmentGame;
    this.enemyHPBar = enemyHPBar;
    this.heroHPBar = heroHPBar;
    this.levelEquation = levelEquation;
    this.levelType = levelType;
    this.textView = textView;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      FrameLayout FragmentGame = (FrameLayout) rootView;

      id = R.id.enemyHPBar;
      ProgressBar enemyHPBar = ViewBindings.findChildViewById(rootView, id);
      if (enemyHPBar == null) {
        break missingId;
      }

      id = R.id.heroHPBar;
      ProgressBar heroHPBar = ViewBindings.findChildViewById(rootView, id);
      if (heroHPBar == null) {
        break missingId;
      }

      id = R.id.levelEquation;
      TextView levelEquation = ViewBindings.findChildViewById(rootView, id);
      if (levelEquation == null) {
        break missingId;
      }

      id = R.id.levelType;
      TextView levelType = ViewBindings.findChildViewById(rootView, id);
      if (levelType == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new FragmentGameBinding((FrameLayout) rootView, FragmentGame, enemyHPBar, heroHPBar,
          levelEquation, levelType, textView, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
